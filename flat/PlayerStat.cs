// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::FlatBuffers;

public struct PlayerStat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PlayerStat GetRootAsPlayerStat(ByteBuffer _bb) { return GetRootAsPlayerStat(_bb, new PlayerStat()); }
  public static PlayerStat GetRootAsPlayerStat(ByteBuffer _bb, PlayerStat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PlayerStat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Class CType { get { int o = __p.__offset(4); return o != 0 ? (Class)__p.bb.GetInt(o + __p.bb_pos) : Class.Base; } }
  public int HP { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HPLim { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MP { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MPLim { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int LV { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ID { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<PlayerStat> CreatePlayerStat(FlatBufferBuilder builder,
      Class cType = Class.Base,
      int HP = 0,
      int HPLim = 0,
      int MP = 0,
      int MPLim = 0,
      int LV = 0,
      int ID = 0) {
    builder.StartObject(7);
    PlayerStat.AddID(builder, ID);
    PlayerStat.AddLV(builder, LV);
    PlayerStat.AddMPLim(builder, MPLim);
    PlayerStat.AddMP(builder, MP);
    PlayerStat.AddHPLim(builder, HPLim);
    PlayerStat.AddHP(builder, HP);
    PlayerStat.AddCType(builder, cType);
    return PlayerStat.EndPlayerStat(builder);
  }

  public static void StartPlayerStat(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddCType(FlatBufferBuilder builder, Class cType) { builder.AddInt(0, (int)cType, 0); }
  public static void AddHP(FlatBufferBuilder builder, int HP) { builder.AddInt(1, HP, 0); }
  public static void AddHPLim(FlatBufferBuilder builder, int HPLim) { builder.AddInt(2, HPLim, 0); }
  public static void AddMP(FlatBufferBuilder builder, int MP) { builder.AddInt(3, MP, 0); }
  public static void AddMPLim(FlatBufferBuilder builder, int MPLim) { builder.AddInt(4, MPLim, 0); }
  public static void AddLV(FlatBufferBuilder builder, int LV) { builder.AddInt(5, LV, 0); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(6, ID, 0); }
  public static Offset<PlayerStat> EndPlayerStat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PlayerStat>(o);
  }
};

