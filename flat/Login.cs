// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::FlatBuffers;

public struct Login : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Login GetRootAsLogin(ByteBuffer _bb) { return GetRootAsLogin(_bb, new Login()); }
  public static Login GetRootAsLogin(ByteBuffer _bb, Login obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Login __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Class CType { get { int o = __p.__offset(4); return o != 0 ? (Class)__p.bb.GetInt(o + __p.bb_pos) : Class.Base; } }
  public bool IsSignin { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string Id { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(8); }
  public string Pass { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetPassBytes() { return __p.__vector_as_arraysegment(10); }
  public bool IsSuccess { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<Login> CreateLogin(FlatBufferBuilder builder,
      Class cType = Class.Base,
      bool isSignin = false,
      StringOffset idOffset = default(StringOffset),
      StringOffset passOffset = default(StringOffset),
      bool isSuccess = false) {
    builder.StartObject(5);
    Login.AddPass(builder, passOffset);
    Login.AddId(builder, idOffset);
    Login.AddCType(builder, cType);
    Login.AddIsSuccess(builder, isSuccess);
    Login.AddIsSignin(builder, isSignin);
    return Login.EndLogin(builder);
  }

  public static void StartLogin(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddCType(FlatBufferBuilder builder, Class cType) { builder.AddInt(0, (int)cType, 0); }
  public static void AddIsSignin(FlatBufferBuilder builder, bool isSignin) { builder.AddBool(1, isSignin, false); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(2, idOffset.Value, 0); }
  public static void AddPass(FlatBufferBuilder builder, StringOffset passOffset) { builder.AddOffset(3, passOffset.Value, 0); }
  public static void AddIsSuccess(FlatBufferBuilder builder, bool isSuccess) { builder.AddBool(4, isSuccess, false); }
  public static Offset<Login> EndLogin(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Login>(o);
  }
};

